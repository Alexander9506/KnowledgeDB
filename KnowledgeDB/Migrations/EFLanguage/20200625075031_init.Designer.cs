// <auto-generated />
using System;
using KnowledgeDB.Models.Repositories.Language;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace KnowledgeDB.Migrations.EFLanguage
{
    [DbContext(typeof(EFLanguageContext))]
    [Migration("20200625075031_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("KnowledgeDB.Models.LanguagePack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EnglishLanguageName")
                        .HasColumnType("text");

                    b.Property<string>("NativeLanguageName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("LanguagePacks");
                });

            modelBuilder.Entity("KnowledgeDB.Models.StringEntry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("KeyID")
                        .HasColumnType("integer");

                    b.Property<int?>("LanguagePackID")
                        .HasColumnType("integer");

                    b.Property<int?>("StringEntryGroupID")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("KeyID");

                    b.HasIndex("LanguagePackID");

                    b.HasIndex("StringEntryGroupID");

                    b.ToTable("StringEntries");

                    b.HasDiscriminator<string>("Discriminator").HasValue("StringEntry");
                });

            modelBuilder.Entity("KnowledgeDB.Models.StringKey", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("KeyName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("StringKeys");
                });

            modelBuilder.Entity("KnowledgeDB.Models.StringEntryGroup", b =>
                {
                    b.HasBaseType("KnowledgeDB.Models.StringEntry");

                    b.HasDiscriminator().HasValue("StringEntryGroup");
                });

            modelBuilder.Entity("KnowledgeDB.Models.StringEntry", b =>
                {
                    b.HasOne("KnowledgeDB.Models.StringKey", "Key")
                        .WithMany("Entries")
                        .HasForeignKey("KeyID");

                    b.HasOne("KnowledgeDB.Models.LanguagePack", "LanguagePack")
                        .WithMany("StringEntries")
                        .HasForeignKey("LanguagePackID");

                    b.HasOne("KnowledgeDB.Models.StringEntryGroup", null)
                        .WithMany("Entries")
                        .HasForeignKey("StringEntryGroupID");
                });
#pragma warning restore 612, 618
        }
    }
}
